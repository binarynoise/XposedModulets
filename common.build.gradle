def isAndroid = plugins.hasPlugin("com.android.application")
def isAndroidLib = plugins.hasPlugin("com.android.library")
def isJavaLib = plugins.hasPlugin("java-library")
def isKotlinLib = plugins.hasPlugin("org.jetbrains.kotlin.jvm")
def isKotlinAndroid = plugins.hasPlugin("org.jetbrains.kotlin.android")

if (isAndroid || isAndroidLib) {
    android {
        defaultConfig {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), '../proguard-rules.pro'
        }
        
        def propsFile = rootProject.file('keystore.properties')
        if (propsFile.exists()) {
            def props = new Properties()
            props.load(new FileInputStream(propsFile))
            
            
            signingConfigs {
                release {
                    storeFile = new File(getRootProject().projectDir, props['storeFile']).absoluteFile
                    assert storeFile.exists()
                    
                    storePassword = props['storePassword']
                    
                    if (keyAlias == null)
                        keyAlias = props['keyAlias']
                    keyPassword = props['keyPassword']
                }
            }
            
            defaultConfig.signingConfig = signingConfigs.release
            buildTypes.debug.signingConfig = signingConfigs.release
            
        }
        
        buildTypes {
            release {
                minifyEnabled true
                
                if (isAndroid) {
                    shrinkResources true
                }
                multiDexEnabled false
            }
            debug {
                minifyEnabled false
                shrinkResources false
                multiDexEnabled false
                versionNameSuffix = "-dev"
            }
        }
        
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_11
            targetCompatibility JavaVersion.VERSION_11
        }
        if (isAndroid) {
            dependenciesInfo {
                includeInApk false
                includeInBundle false
            }
        }
        packagingOptions {
            jniLibs {
                excludes += ['**/kotlin/**']
            }
            resources {
                excludes += ['/META-INF/*.kotlin_module', 'kotlin-tooling-metadata.json', '**/kotlin/**', '**/*.txt', '**/*.xml', '**/*.properties']
            }
        }
    }
}

if (isKotlinLib || isKotlinAndroid) {
    kotlin {
        jvmToolchain(11)
    }
}

dependencies {
    if (isAndroid || isAndroidLib) {
        implementation 'androidx.annotation:annotation:1.6.0'
        compileOnly "de.robv.android.xposed:api:82"
    }
    
}

System.out.println("applied common on " + project)
